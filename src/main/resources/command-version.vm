public static final class Version {
    public static final class Print implements Runnable {

        private final java.io.PrintStream out;

        public Print(final java.io.PrintStream out) {
            this.out = out;
        }

        public Print() {
            this(System.out);
        }

        @Override
        public void run() {
            this.out.println("$command.name version $version");
            #if($build)
                this.out.println("build $build");
            #end
        }
    }

    public static final class Requested extends Utils.Delegated<Boolean> {

        public Requested(final java.util.function.Supplier<CommandData> data) {
            super(() -> data.get().version);
        }

        public Requested(final CommandData data) {
            this(() -> data);
        }

        public Requested(final String... arguments) {
            this(new ParsedData(arguments));
        }
    }

}
